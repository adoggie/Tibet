
app_name: 'testModule'
project_name: 'testProject'
project_version: '0.1'

logging:
  level: DEBUG
  format: '%(levelname)s %(asctime)s  %(message)s'
  message_format: '%(project_name)s:%(project_version)s %(app_id)s %(_filename)s:%(_lineno)d [%(tags)s] '

  filters:
    trans:
      tag: 'TRANS:'   # tag 过滤
  handlers:
    - type: file
      enable: true
      filename: 'server.log'
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10

    - type: file
      enable: true
      filename: 'trans.log'   #运单日志跟踪
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10
      filter: 'trans'

    - type: console
      enable: true



http_trace: #自动日志记录
  level: DEBUG
  request:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true

  response:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true



datasources:
  - name: 'mongodb'
    class: 'mantis.fundamental.nosql.mongo.Datasource'
    host: 'mongodb'
    port: 27017
    dbname:
    user:
    password:
    enable: true

  - name: 'zk_1'
    type: 'zookeeper'
    enable: false
    hosts: 'localhost:2181'
    root: '/camel'

  - name: 'redis'
    class: 'mantis.fundamental.redis.datasource.Datasource'
    host: 'redis'
    port: 6379
    password: ''
    db: 0
    enable: true

message_brokers:
  - name: 'kafka_1'
    class: 'mantis.fundamental.kafka.MessageBroker'
    enable: false
    hosts: 'localhost:9092'
    zookeepers: 'localhost:2181'
    channels:
      - name: 'test'
        group: 'abcdef'  # simple_consumer if group is null
        handler:  'access.kafka.test.get_message' # last unit< get_message> is function object
        enable: true
        type: 'queue'

  - name: 'redis'
    class: 'mantis.fundamental.redis.broker.MessageBroker'
    host: 'redis'
    port: 6379
    password: ''
    db: 0
    enable: true
    channels:
      - name: 'ctp_contract_tick_queue'
#        handler: 'get_message'
        enable: true
        type: 'queue' # or queue

services:
  - name: 'http'
    class: 'mantis.fundamental.flask.service.FlaskService'
    enable: true
    block: false
    cfgs:
      SQLALCHEMY_DATABASE_URI : 'sqlite:////tmp/test.db'
      SQLALCHEMY_BINDS:
      SQLALCHEMY_TRACK_MODIFICATIONS : true
      SQLALCHEMY_COMMIT_ON_TEARDOWN : true
      SECRET_KEY : "abc"
      TEMPLATES_AUTO_RELOAD: true
      DEBUG: true
      SEND_FILE_MAX_AGE_DEFAULT: 0
    http:
#      host : '172.16.109.237'
      host : '127.0.0.1'
      port : 18804
      threaded: false
      debug: true

    blueprints:
      - package: 'http'
        url: '/'
        name: 'http'
        register: true
        modules:
          - name: 'views'
            url: 'console'
            routes:
              - url: '/'                    # url name
                name: 'index'   # function name
                methods: 'GET'
              - url: '/orders'                    # url name
                name: 'orders'   # function name
                methods: 'GET'
          - name: 'api'
            url: 'api'
            routes:
              - url: '/orders'                    # url name
                name: 'sendOrder'   # function name
                methods: 'POST'
              - url: '/orders'                    # url name
                name: 'cancelOrder'   # function name
                methods: 'DELETE'
              - url: '/orders/all'                    # url name
                name: 'cancelAllOrders'   # function name
                methods: 'DELETE'
              - url: '/orders/all/ignore_account'                    # url name
                name: 'cancelAllOrdersIgnoreAccount'   # function name
                methods: 'DELETE'

              - url: '/orders/all/ignore_account'                    # url name
                name: 'cancelAllOrdersIgnoreAccount'   # function name
                methods: 'DELETE'

              - url: '/positions/empty'                    # url name
                name: 'sellOrCoverAllTrades'   # function name
                methods: 'POST'

              - url: '/syscmd/start'
                name: 'strategy_start'   # 策略启动
                methods: 'POST,GET'
              - url: '/syscmd/stop'
                name: 'strategy_stop'   # 策略停止
                methods: 'POST,GET'
              - url: '/syscmd/pause'
                name: 'strategy_pause'   # 策略暂停
                methods: 'POST,GET'

              - url: '/profile'                # url name
                name: 'get_strategy_profile'   # 获得策略的配置和运行信息
                methods: 'POST,GET'

  - name:       'main'
    id:     'strategy-runner'
    enable:     true
    class:      'main.StrategyRunner'
    future_tick_sub_key: 'future_{gateway}_tick_{symbol}'
    future_bar_sub_key: 'future_{gateway}_bar_{symbol}_{scale}'

    auto_start: true   # 启动自动运行策略

    fanout:
      - name: 'switch0'
        channels:
          - 'redis/ctp_ticks/queue'
          - 'redis/ctp_tick_{symbol}/pubsub'
      - name: 'logging'
        channels:
          - 'redis/trade.log.{service_type}/queue'
          - 'redis/trade.log.{service_type}.{service_id}/pubsub'
      - name: 'strategy_logging'
        channels:
          - 'redis/trade.strategy.log/queue'
          - 'redis/trade.strategy.log.pub/pubsub'

    ctp_tick_filters:
      - 'filters.CtpTickValidator'
    running_unique: True  #仅仅允许单独进程运行
    datares_service:
      http: 'http://172.16.109.1:18802/v1'
    http_request_timeout: 20000





# qpid-receive -b localhost:5672 -a "mq_test;{create:always,node:{type:queue,durable:true}}"






